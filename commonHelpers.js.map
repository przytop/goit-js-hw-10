{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputDate = document.querySelector('#datetime-picker');\nconst buttonStart = document.querySelector('button[data-start]');\nconst days = document.querySelector('span[data-days]');\nconst hours = document.querySelector('span[data-hours]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst seconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > Date.now()) {\n      buttonStart.disabled = false;\n      userSelectedDate = selectedDates[0];\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topCenter',\n      });\n      buttonStart.disabled = true;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction counter() {\n  buttonStart.disabled = true;\n  inputDate.disabled = true;\n  const startCounter = setInterval(() => {\n    const endTime = userSelectedDate - Date.now();\n\n    if (endTime <= 0) {\n      clearInterval(startCounter);\n      inputDate.disabled = false;\n      return;\n    }\n\n    const time = convertMs(endTime);\n    days.textContent = addLeadingZero(time.days);\n    hours.textContent = addLeadingZero(time.hours);\n    minutes.textContent = addLeadingZero(time.minutes);\n    seconds.textContent = addLeadingZero(time.seconds);\n  }, 1000);\n}\n\nflatpickr(inputDate, options);\nbuttonStart.addEventListener('click', counter);\n"],"names":["inputDate","buttonStart","days","hours","minutes","seconds","userSelectedDate","options","selectedDates","iziToast","convertMs","ms","addLeadingZero","value","counter","startCounter","endTime","time","flatpickr"],"mappings":"2GAOA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAE3D,IAAIC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BP,EAAY,SAAW,GACvBK,EAAmBE,EAAc,CAAC,IAElCC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WAClB,CAAO,EACDR,EAAY,SAAW,GAE1B,CACH,EAEA,SAASS,EAAUC,EAAI,CAMrB,MAAMT,EAAO,KAAK,MAAMS,EAAK,KAAG,EAC1BR,EAAQ,KAAK,MAAOQ,EAAK,MAAO,IAAI,EACpCP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EACjDN,EAAU,KAAK,MAASM,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASO,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,GAAU,CACjBb,EAAY,SAAW,GACvBD,EAAU,SAAW,GACrB,MAAMe,EAAe,YAAY,IAAM,CACrC,MAAMC,EAAUV,EAAmB,KAAK,IAAG,EAE3C,GAAIU,GAAW,EAAG,CAChB,cAAcD,CAAY,EAC1Bf,EAAU,SAAW,GACrB,MACD,CAED,MAAMiB,EAAOP,EAAUM,CAAO,EAC9Bd,EAAK,YAAcU,EAAeK,EAAK,IAAI,EAC3Cd,EAAM,YAAcS,EAAeK,EAAK,KAAK,EAC7Cb,EAAQ,YAAcQ,EAAeK,EAAK,OAAO,EACjDZ,EAAQ,YAAcO,EAAeK,EAAK,OAAO,CAClD,EAAE,GAAI,CACT,CAEAC,EAAUlB,EAAWO,CAAO,EAC5BN,EAAY,iBAAiB,QAASa,CAAO"}